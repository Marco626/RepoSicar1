# git init									: Iniciar un repositorio

# git status 								: Lista un estado actual del repositorio con lista de archivos modificados o agregados

# git add <nombre> 							: Agregar archivo nuevo al staging para el commit
	- git add .		(aÃ±adir todos)
	- git add --all (todos omitiendo los nuevos)
	- git add *.txt (todos con la extension "txt")
	- git add doc/	(todos dentro de directorio doc/)
	- git add doc/*.txt (todos dentro de directorio con esa extension)

# git log									: Consultar commits realizados
	- git log -3								: Muestra los ultimos 3
	- git log --oneline 						: Consultar commits abreviado
	- git log --oneline --max-count=2			: Muestra los ultimos 2
	- git log --oneline --since='5 minutes ago' : Hace 5 minutos
	- git log --oneline --until='5 minutes ago' : Hasta hace 5 minutos
	- git log --oneline --author=Marco			: Por el autor
	- git log --oneline --all					: Mostrar todo
	
# git commit -m "Mensaje de commit"			: Cargar los cambios realizados
	- git commit -a -m "Comentario"  			: Agregar(-a) y cargar los cambios (-am)(concatenar abreviaturas) 

# git diff									: Muestra los cambios realizados a un archivo
	- git diff "Id" "ID"						: Compara esos commits
	- git diff --staged

# Configurar datos: 
	Nombre > git config --global user.name "John Doe"
	Correo > git config --global user.email johndoe@example.com

# git clone <url>							: Clonamos el repositorio remoto

# git remote add origin <url>				: Agregar repositorio remoto
	- git remote set-url origin <url>			: Cambiar de remote
	- git remote rm <name/origin>				: Remover repositorio
	- git remote -V 							: Lista repositorios
	- git remote show origin					: Muestra los branches remotos
	- git remote prune origin					: Limpiar branches eliminados

# git branch <nombreBranch>					: Crea un branch
	- git branch 								: Lista los branches
	- git branch -d <nameBranch>				: Comando -d elimina el branch y lo une al master
	- git branch -D <nameBranch>				: Elimina sin preguntar

# git push <origen> <branch>				: Subir al repositorio
	-git push --tags 							: subir un tag

# git reset HEAD <archivo>					: Saca un archivo del commit
	- git reset --soft HEAD^					: Devuelve el ultimo commit que se hizo y pone los cambios en staging
	- git reset --hard HEAD^					: Devuelve el ultimo commit y todos los cambios

# git rebase								: Se ponga al dia con el master sin afectarlo, no es un merge

# git fetch 								: Descarga los cambios de remoto a repositorio local(no se fusionan y hace un branch)

# git merge <nameBranch>					: Une el branch actual con el especificado (mezclar)

# git pull origin <nameBranch>				: Busca los cambios del remoto y actualiza repositorio local

# git checkout								: Regresar a un estado del proyecto
	- git checkout <rama>						: Moverse entre ramas

# git revert HEAD --no-edit					: Revertir Commit

# git rm <archivo> 							: Borrar un archivo del repositorio

# git mv <archivo> <dir>					: Mover a directorio el archivo







# cat "archivo"			: Ver contenido
	
# history				: Historial de comandos utilizado


# git help "cmdn"

# Ctrl + Shift + P : Paquetes Sublime, (Sublimer) Comparar Revision

#comentario para rama Master, Fusionar con rama Main